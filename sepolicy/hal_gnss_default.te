r_dir_file(hal_gnss_default, sysfs_msm_subsys)

vndbinder_use(hal_gnss_default)

allow hal_gnss_default sysfs_soc:dir r_dir_perms;
allow hal_gnss_default sysfs_soc:file r_file_perms;

allow hal_gnss_default self:socket create_socket_perms;
allowxperm hal_gnss_default self:socket ioctl msm_sock_ipc_ioctls;

allow hal_gnss_default self:netlink_generic_socket { bind create read };
allow hal_gnss_default self:netlink_route_socket { bind create nlmsg_read read write };

# Most HALs are not allowed to use network sockets. Qcom library
# libqdi is used across multiple processes which are clients of
# netmgrd including the GNSS HAL. libqdi first attempts to get the network
# interface using an IOCTL on a UDP INET socket, which isn't allowed here.
# If that fails, it falls back to using libc's if_nameindex() which requires
# a netlink route socket, which HALs may use. Due to the initial
# attempt to use a UDP socket, we still see a selinux denial,
# but it is safe to ignore.
# TODO (b/37730994) Remove udp_socket requirement from
# libqdi and have all its clients use netlink route
# sockets.
dontaudit hal_gnss_default self:udp_socket create;

allow hal_gnss_default qmuxd_socket:dir w_dir_perms;
allow hal_gnss_default qmuxd_socket:sock_file create_file_perms;
unix_socket_connect(hal_gnss_default, qmuxd, qmuxd)
